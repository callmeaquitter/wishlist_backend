// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/booked_gifts/create": {
            "post": {
                "description": "Creates a booked gift in the wishlist based on the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BookedGifts"
                ],
                "summary": "Creates a booked gift in the wishlist.",
                "parameters": [
                    {
                        "description": "Booked Gift in Wishlist object to be created",
                        "name": "BookedGiftInWishlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.BookedGiftInWishlist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.BookedGiftInWishlist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/booked_gifts/{gift_id}": {
            "delete": {
                "description": "Deletes a booked gift from the wishlist based on the provided gift ID and user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BookedGifts"
                ],
                "summary": "Deletes a booked gift from the wishlist.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the booked gift to be deleted",
                        "name": "gift_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.BookedGiftInWishlist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/booked_gifts/{user_id}": {
            "get": {
                "description": "Finds all booked gifts in the wishlist for a specific user based on the provided user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BookedGifts"
                ],
                "summary": "Finds booked gifts for a specific user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/db.BookedGiftInWishlist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/commentToSelection": {
            "post": {
                "description": "Принимает CommentToSelection в теле запроса и создает соответствующий CommentToSelection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommentToSelection"
                ],
                "summary": "Создает новый CommentToSelection",
                "parameters": [
                    {
                        "description": "Create CommentToSelection",
                        "name": "CommentToSelection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CommentToSelection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/commentToSelection/{id}": {
            "get": {
                "description": "Принимает id Selection в качестве параметра пути и возвращает комментарии для соответствующего Selection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommentToSelection"
                ],
                "summary": "Получает комментарии для Selection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Selection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            },
            "put": {
                "description": "Принимает id CommentToSelection в качестве параметра пути и обновляет соответствующий CommentToSelection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommentToSelection"
                ],
                "summary": "Обновляет существующий CommentToSelection",
                "parameters": [
                    {
                        "description": "Update CommentToSelection",
                        "name": "CommentToSelection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CommentToSelection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            },
            "delete": {
                "description": "Принимает id CommentToSelection в качестве параметра пути и удаляет соответствующий CommentToSelection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CommentToSelection"
                ],
                "summary": "Удаляет существующий CommentToSelection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CommentToSelection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/giftToSelection": {
            "post": {
                "description": "Принимает GiftToSelection в теле запроса и создает соответствующий GiftToSelection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftToSelection"
                ],
                "summary": "Создает новый GiftToSelection",
                "parameters": [
                    {
                        "description": "Create GiftToSelection",
                        "name": "GiftToSelection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.GiftToSelection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/giftToSelection/{id}": {
            "get": {
                "description": "Принимает id GiftToSelection в качестве параметра пути и находит соответствующий GiftToSelection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftToSelection"
                ],
                "summary": "Находит существующий GiftToSelection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GiftToSelection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            },
            "put": {
                "description": "Принимает id GiftToSelection в качестве параметра пути и обновляет соответствующий GiftToSelection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftToSelection"
                ],
                "summary": "Обновляет существующий GiftToSelection",
                "parameters": [
                    {
                        "description": "Update GiftToSelection",
                        "name": "GiftToSelection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.GiftToSelection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            },
            "delete": {
                "description": "Принимает id GiftToSelection в качестве параметра пути и удаляет соответствующий GiftToSelection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftToSelection"
                ],
                "summary": "Удаляет существующий GiftToSelection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GiftToSelection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/gift_category/create": {
            "post": {
                "description": "Creates a new gift category based on the provided data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftCategory"
                ],
                "summary": "Creates a new gift category.",
                "parameters": [
                    {
                        "description": "Gift Category object to be created",
                        "name": "GiftCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.GiftCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/db.GiftCategory"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Failed to create gift category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gift_category/{id}": {
            "delete": {
                "description": "Deletes a gift category based on the provided category ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftCategory"
                ],
                "summary": "Deletes a gift category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the gift category to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.GiftCategory"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/gift_review": {
            "post": {
                "description": "Create a new review for gift.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftReview"
                ],
                "summary": "Create a new review for gift.",
                "parameters": [
                    {
                        "description": "Create GiftReview",
                        "name": "Gift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.GiftReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.GiftReview"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/gift_review/{gift_id}": {
            "get": {
                "description": "Calculate average mark for a gift by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftReview"
                ],
                "summary": "Calculate average mark for a gift by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gift ID",
                        "name": "gift_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Average mark",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gift_review/{id}": {
            "get": {
                "description": "Get gift review by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftReview"
                ],
                "summary": "Get gift review by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/db.GiftReview"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a giftReview from the database using the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GiftReview"
                ],
                "summary": "Delete a giftReview by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GiftReview ID to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GiftReview deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error in deleteGiftReview operation",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gifts": {
            "get": {
                "description": "Get all gifts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gifts"
                ],
                "summary": "Get all gifts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/db.Gift"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gifts"
                ],
                "summary": "Creates a new gift.",
                "parameters": [
                    {
                        "description": "Create Gift",
                        "name": "Gift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Gift"
                        }
                    },
                    {
                        "description": "Create Gift",
                        "name": "Gift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Gift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.Gift"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.BookedGiftInWishlist": {
            "type": "object",
            "properties": {
                "gift_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "db.CommentToSelection": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "selection_id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "db.Gift": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "LIFEHACK: use string id like 'gift_ajdsjanjklsnls'",
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "price": {
                    "description": "TODO: use decimal.Decimal instead of int",
                    "type": "integer"
                }
            }
        },
        "server.ResponseHTTP": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7777",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Wishlist",
	Description:      "This is a sample swagger for Fiber",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
