// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/gifts": {
            "get": {
                "description": "Get all books",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gifts"
                ],
                "summary": "Get all books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/db.Gift"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            },
            "post": {
                "description": "get the status of server.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gifts"
                ],
                "summary": "Creates a new gift.",
                "parameters": [
                    {
                        "description": "Create Gift",
                        "name": "Gift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Gift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.Gift"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        },
        "/gifts/{id}": {
            "delete": {
                "description": "get the status of server.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gifts"
                ],
                "summary": "Creates a new gift.",
                "parameters": [
                    {
                        "description": "Create Gift",
                        "name": "Gift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Gift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.Gift"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            },
            "patch": {
                "description": "get the status of server.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gifts"
                ],
                "summary": "Creates a new gift.",
                "parameters": [
                    {
                        "description": "Create Gift",
                        "name": "Gift",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Gift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.Gift"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.ResponseHTTP"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Gift": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "LIFEHACK: use string id like 'gift_ajdsjanjklsnls'",
                    "type": "string"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "description": "UserID      string ` + "`" + `json:\"user_id\"` + "`" + `",
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "price": {
                    "description": "TODO: use decimal.Decimal instead of int",
                    "type": "integer"
                }
            }
        },
        "server.ResponseHTTP": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7777",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Wishlist",
	Description:      "This is a sample swagger for Fiber",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
