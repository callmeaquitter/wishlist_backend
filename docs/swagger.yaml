basePath: /
definitions:
  db.BookedGiftInWishlist:
    properties:
      gift_id:
        type: string
      user_id:
        type: string
    type: object
  db.Gift:
    properties:
      category:
        type: string
      comments:
        type: string
      description:
        type: string
      id:
        description: 'LIFEHACK: use string id like ''gift_ajdsjanjklsnls'''
        type: string
      link:
        type: string
      name:
        type: string
      photo:
        type: string
      price:
        description: 'TODO: use decimal.Decimal instead of int'
        type: integer
    type: object
  db.GiftCategory:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  db.GiftReview:
    properties:
      comment:
        type: string
      date:
        type: string
      gift_id:
        type: string
      id:
        type: string
      mark:
        type: number
    type: object
  server.ResponseHTTP:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:7777
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Wishlist
  version: "1.0"
paths:
  /booked_gifts/{gift_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a booked gift from the wishlist based on the provided gift
        ID and user ID.
      parameters:
      - description: ID of the booked gift to be deleted
        in: path
        name: gift_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.BookedGiftInWishlist'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Deletes a booked gift from the wishlist.
      tags:
      - BookedGifts
  /booked_gifts/{user_id}:
    get:
      consumes:
      - application/json
      description: Finds all booked gifts in the wishlist for a specific user based
        on the provided user ID.
      parameters:
      - description: ID of the user
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/db.BookedGiftInWishlist'
                  type: array
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Finds booked gifts for a specific user.
      tags:
      - BookedGifts
  /booked_gifts/create:
    post:
      consumes:
      - application/json
      description: Creates a booked gift in the wishlist based on the provided data.
      parameters:
      - description: Booked Gift in Wishlist object to be created
        in: body
        name: BookedGiftInWishlist
        required: true
        schema:
          $ref: '#/definitions/db.BookedGiftInWishlist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.BookedGiftInWishlist'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Creates a booked gift in the wishlist.
      tags:
      - BookedGifts
  /gift_category/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a gift category based on the provided category ID.
      parameters:
      - description: ID of the gift category to be deleted
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.GiftCategory'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Deletes a gift category.
      tags:
      - GiftCategory
  /gift_category/create:
    post:
      consumes:
      - application/json
      description: Creates a new gift category based on the provided data.
      parameters:
      - description: Gift Category object to be created
        in: body
        name: GiftCategory
        required: true
        schema:
          $ref: '#/definitions/db.GiftCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/db.GiftCategory'
                  type: array
              type: object
        "400":
          description: Failed to create gift category
          schema:
            type: string
      summary: Creates a new gift category.
      tags:
      - GiftCategory
  /gift_review:
    post:
      consumes:
      - application/json
      description: Create a new review for gift.
      parameters:
      - description: Create GiftReview
        in: body
        name: Gift
        required: true
        schema:
          $ref: '#/definitions/db.GiftReview'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.GiftReview'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Create a new review for gift.
      tags:
      - GiftReview
  /gift_review/{gift_id}:
    get:
      consumes:
      - application/json
      description: Get all gift reviews by giftId
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/db.GiftReview'
                  type: array
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Get all gift reviews by giftId
      tags:
      - GiftReview
  /gift_review/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a giftReview from the database using the provided ID.
      parameters:
      - description: GiftReview ID to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GiftReview deleted successfully
          schema:
            type: string
        "400":
          description: Error in deleteGiftReview operation
          schema:
            type: string
      summary: Delete a giftReview by ID.
      tags:
      - GiftReview
    get:
      consumes:
      - application/json
      description: Get gift review by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/db.GiftReview'
                  type: array
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Get gift review by id
      tags:
      - GiftReview
  /gifts:
    get:
      consumes:
      - application/json
      description: Get all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/db.Gift'
                  type: array
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Get all books
      tags:
      - Gifts
    post:
      consumes:
      - application/json
      description: get the status of server.
      parameters:
      - description: Create Gift
        in: body
        name: Gift
        required: true
        schema:
          $ref: '#/definitions/db.Gift'
      parameters:
      - description: Create Gift
        in: body
        name: Gift
        required: true
        schema:
          $ref: '#/definitions/db.Gift'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Gift'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Creates a new gift.
      tags:
      - Gifts
  /gifts/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a gift from the database using the provided ID.
      parameters:
      - description: Gift ID to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Gift deleted successfully
          schema:
            type: string
        "400":
          description: Error in deleteGift operation
          schema:
            type: string
      summary: Delete a gift by ID.
      tags:
      - Gifts
    get:
      consumes:
      - application/json
      description: Get one books
      parameters:
      - description: Gift ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/db.Gift'
                  type: array
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Get one books
      tags:
      - Gifts
    patch:
      consumes:
      - application/json
      description: get the status of server.
      parameters:
      - description: Create Gift
        in: body
        name: Gift
        required: true
        schema:
          $ref: '#/definitions/db.Gift'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Gift'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Creates a new gift.
      tags:
      - Gifts
swagger: "2.0"
