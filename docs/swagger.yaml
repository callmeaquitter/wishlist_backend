basePath: /
definitions:
  db.Gift:
    properties:
      comments:
        type: string
      description:
        type: string
      id:
        description: 'LIFEHACK: use string id like ''gift_ajdsjanjklsnls'''
        type: string
      is_favorite:
        type: boolean
      link:
        type: string
      name:
        description: UserID      string `json:"user_id"`
        type: string
      photo:
        type: string
      price:
        description: 'TODO: use decimal.Decimal instead of int'
        type: integer
    type: object
  db.Seller:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      photo:
        type: string
    type: object
  db.SellerToService:
    properties:
      seller_id:
        type: string
      service_id:
        type: string
    type: object
  db.Service:
    properties:
      id:
        type: string
      location:
        type: string
      name:
        type: string
      photos:
        type: string
      price:
        description: 'TODO: use decimal.Decimal instead of int'
        type: integer
    type: object
  server.ResponseHTTP:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:7777
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Wishlist
  version: "1.0"
paths:
  /:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Gift'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Creates a new gift.
      tags:
      - Gifts
  /sellerToService:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.SellerToService'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Fetches all Services that belong to the speicfied Seller.
      tags:
      - SellerToService
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Selllers-Services
        in: body
        name: SellerToService
        required: true
        schema:
          $ref: '#/definitions/db.SellerToService'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.SellerToService'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Creates a new connection of Seller-Service.
      tags:
      - SellerToService
  /sellerToService/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete Selllers-Services
        in: body
        name: SellerToService
        required: true
        schema:
          $ref: '#/definitions/db.SellerToService'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.SellerToService'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Deletes a specified Seller-Service connection.
      tags:
      - SellerToService
    get:
      consumes:
      - application/json
      parameters:
      - description: Sellers-Services ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.SellerToService'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Fetches a specific Seller-Service connection.
      tags:
      - SellerToService
  /sellers:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Seller'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Fetches all sellers.
      tags:
      - Sellers
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Seller
        in: body
        name: Seller
        required: true
        schema:
          $ref: '#/definitions/db.Seller'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Seller'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Creates a new seller.
      tags:
      - Sellers
  /sellers/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete Seller
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Seller'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Deletes a specified seller.
      tags:
      - Sellers
    get:
      consumes:
      - application/json
      parameters:
      - description: Seller ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Seller'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Fetches a specific seller.
      tags:
      - Sellers
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Seller
        in: body
        name: Service
        required: true
        schema:
          $ref: '#/definitions/db.Service'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Seller'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Updates an existing seller.
      tags:
      - Sellers
  /services:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Service'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Fetches all services.
      tags:
      - Services
    post:
      consumes:
      - application/json
      parameters:
      - description: Create Service
        in: body
        name: Service
        required: true
        schema:
          $ref: '#/definitions/db.Service'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Service'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Creates a new service.
      tags:
      - Services
  /services/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete Service
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Service'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Deletes a specified service.
      tags:
      - Services
    get:
      consumes:
      - application/json
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Service'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Fetches a specific service.
      tags:
      - Services
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Service
        in: body
        name: Service
        required: true
        schema:
          $ref: '#/definitions/db.Service'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/server.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/db.Service'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.ResponseHTTP'
      summary: Updates an existing service.
      tags:
      - Services
swagger: "2.0"
